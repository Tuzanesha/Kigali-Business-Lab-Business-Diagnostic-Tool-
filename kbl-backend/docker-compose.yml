version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: kbl-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kbl_backend}
      POSTGRES_USER: ${POSTGRES_USER:-kbl_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kblUser1234}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  web:
    build: .
    container_name: kbl-web
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application -b 0.0.0.0:8000 --workers 3"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-me}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,kbl-web,backend-proxy-1
      - PUBLIC_BASE_URL=http://localhost:8080
      - POSTGRES_DB=${POSTGRES_DB:-kbl_backend}
      - POSTGRES_USER=${POSTGRES_USER:-kbl_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kblUser1234}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=karlychloee12@gmail.com
      - EMAIL_HOST_PASSWORD=pkgdaegbpnredkhi
      - EMAIL_USE_TLS=True
      - DEFAULT_FROM_EMAIL=karlychloee12@gmail.com
      - SMS_PROVIDER=vonage
      - VONAGE_API_KEY=24b3e662
      - VONAGE_API_SECRET=oMtjyoGwKph0HOw3
      - VONAGE_FROM=+250787687607
    volumes:
      - .:/app:delegated
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  proxy:
    image: nginx:stable-alpine
    container_name: backend-proxy-1
    volumes:
      - ./nginx.default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
    ports:
      - "8080:8080"
    depends_on:
      - web
    restart: unless-stopped

volumes:
  pgdata:

networks:
  default:
    driver: bridge
